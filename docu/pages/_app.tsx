import { ConnectedRouter } from "connected-next-router";
import { Provider } from "react-redux";
import Head from "next/head";
import store from "./../reducer/rootReducer";
import { AppProps } from 'next/app';

import Header from "./../components/Header";
import Footer from "./../components/Footer";
import "./../styles/app.scss";
process.env.NODE_TLS_REJECT_UNAUTHORIZED = "0";

function MyApp({ Component, pageProps, router }: AppProps) {
  // const [loading, setLoading] = useState(false);
  // const dispatch = useDispatch();
  // useEffect(() => {
  //   router.events.on("routeChangeStart", (url) => {
  //     setLoading(true);
  //   });
  //   router.events.on("routeChangeComplete", (url) => {
  //     setLoading(false);
  //   });
  //   router.events.on("routeChangeError", (err, url) => {
  //     setLoading(false);
  //   });
  // }, [router.events]);
  // console.log('pageprops', pageProps)
  // useMemo(() => {
  //   dispatch(CategoryActions.fetchCategorySuccess(pageProps.listCategoryMain));
  // }, []);
  return (
    <>
      <Head>
        <title>Bakery Bình Dương</title>
        <meta name="description" content="Generated by create next app" />
        {/* <meta httpEquiv="refresh" content={30} /> */}
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"
        />
      </Head>

      <Provider store={store}>
        <ConnectedRouter>
          <div className="page-wrapper">
            <div className="page-container">
              <Header />
              <Component {...pageProps} />
              <Footer />
            </div>
          </div>
          {/* {loading && <Loading />}
          <LoadingMain />
          <ToastContainer
            position="top-right"
            autoClose={2000}
            hideProgressBar={false}
            newestOnTop={false}
            closeOnClick
            rtl={false}
            pauseOnFocusLoss
            draggable
            pauseOnHover
          />
          <ToastContainer /> */}
        </ConnectedRouter>
      </Provider>
    </>
  );
}

export default MyApp;
